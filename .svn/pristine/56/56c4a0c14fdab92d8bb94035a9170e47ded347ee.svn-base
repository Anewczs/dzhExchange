package exchange

import (
	"fmt"
	"sync"
)

type StkMatchService struct {
	id    string
	isRun bool
}

func (stm *StkMatchService) DealMatch(queue *StkMatchQueue, q *Quote, f chan int) {
	//lock queue util deal end
	c := sync.NewCond(stm)
	c.L.Lock()
	buy := queue.Queue.BuyQueue
	sell := queue.Queue.SellQueue
	for _, v := range buy {
		fmt.Println("stk order didn't match", v)
	}
	for _, v := range sell {
		fmt.Println("stk order didn't match", v)
	}
	c.L.Unlock()
	f <- 1
}

func (stm *StkMatchService) Lock() {
	fmt.Println("get sync")
}

func (stm *StkMatchService) Unlock() {
	fmt.Println("release sync")
}
